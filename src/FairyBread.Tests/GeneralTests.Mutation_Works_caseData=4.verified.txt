{
  Errors: [
    {
      Message: 'Some Integer' must be equal to '1'.,
      Code: FairyBread_ValidationError,
      Path: {
        Name: write,
        Parent: {
          Length: -1,
          IsRoot: true
        },
        IsRoot: false
      },
      Extensions: {
        argumentName: foo,
        attemptedValue: -1,
        code: FairyBread_ValidationError,
        errorCode: EqualValidator,
        errorMessage: 'Some Integer' must be equal to '1'.,
        formattedMessagePlaceholderValues: {
          ComparisonProperty: ,
          ComparisonValue: 1,
          PropertyName: Some Integer,
          PropertyValue: -1
        },
        propertyName: SomeInteger,
        severity: Error,
        validatorName: FooInputDtoValidator
      }
    },
    {
      Message: 'Some String' must be equal to 'hello'.,
      Code: FairyBread_ValidationError,
      Path: {
        Name: write,
        Parent: {
          Length: -1,
          IsRoot: true
        },
        IsRoot: false
      },
      Extensions: {
        argumentName: foo,
        attemptedValue: -1,
        code: FairyBread_ValidationError,
        errorCode: EqualValidator,
        errorMessage: 'Some String' must be equal to 'hello'.,
        formattedMessagePlaceholderValues: {
          ComparisonProperty: ,
          ComparisonValue: hello,
          PropertyName: Some String,
          PropertyValue: -1
        },
        propertyName: SomeString,
        severity: Error,
        validatorName: FooInputDtoValidator
      }
    },
    {
      Message: The specified condition was not met for 'Email Address'.,
      Code: FairyBread_ValidationError,
      Path: {
        Name: write,
        Parent: {
          Length: -1,
          IsRoot: true
        },
        IsRoot: false
      },
      Extensions: {
        argumentName: bar,
        attemptedValue: -1,
        code: FairyBread_ValidationError,
        errorCode: AsyncPredicateValidator,
        errorMessage: The specified condition was not met for 'Email Address'.,
        formattedMessagePlaceholderValues: {
          PropertyName: Email Address,
          PropertyValue: -1
        },
        propertyName: EmailAddress,
        severity: Error,
        validatorName: BarInputDtoAsyncValidator
      }
    }
  ]
}